{"version":3,"sources":["components/Search.js","components/Add.js","components/Person.js","components/Notification.js","crud_service.js","App.js","reportWebVitals.js","index.js"],"names":["Search","changeHandler","onChange","e","Add","nameChangeHandler","numberChangeHandler","clickHandler","onSubmit","type","Person","name","number","onClick","styles","error","width","color","padding","fontWeight","backgroundColor","border","success","Notification","notificationStyle","message","style","url","axios","get","then","res","data","item","post","itemId","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchWord","setSearchWord","setMessage","setError","useEffect","service","notification","handleUpdate","person","id","setTimeout","catch","target","value","preventDefault","newPerson","every","match","find","i","window","confirm","map","toLowerCase","includes","n","handleDeleteClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffedd1fb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Search = ({ changeHandler }) => {\r\n    return (\r\n        <div>\r\n            Filter: <input onChange={(e) => changeHandler(e)} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nexport const Add = ({ nameChangeHandler, numberChangeHandler, clickHandler }) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={(e) => clickHandler(e)}>\r\n                <div>\r\n                    name: <input onChange={(e) => nameChangeHandler(e)} />\r\n                </div>\r\n                <div>\r\n                    number: <input onChange={(e) => numberChangeHandler(e)} />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">Add</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Add;\r\n","import React from \"react\";\r\n\r\nconst Person = ({ name, number, clickHandler }) => {\r\n    return (\r\n        <p>\r\n            {name} {number} <button onClick={() => clickHandler()}>Delete</button>\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default Person;\r\n","const Notification = ({ type, message }) => {\r\n    let notificationStyle;\r\n\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n    if (type === \"error\") {\r\n        notificationStyle = styles.error;\r\n    } else {\r\n        notificationStyle = styles.success;\r\n    }\r\n\r\n    return <p style={notificationStyle}>{message}</p>;\r\n};\r\n\r\nconst styles = {\r\n    error: {\r\n        width: \"fit-content\",\r\n        color: \"red\",\r\n        padding: \"1em\",\r\n        fontWeight: \"bold\",\r\n        backgroundColor: \"whitesmoke\",\r\n        border: \"2px solid red\",\r\n    },\r\n    success: {\r\n        width: \"fit-content\",\r\n        color: \"darkgreen\",\r\n        padding: \"1em\",\r\n        fontWeight: \"bold\",\r\n        backgroundColor: \"lightgreen\",\r\n        border: \"2px solid darkgreen\",\r\n    },\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://fso-puhelinluettelo-backend.herokuapp.com/api/persons\";\r\n\r\nconst getAll = () => {\r\n    return axios.get(url).then((res) => res.data);\r\n};\r\n\r\nconst create = (item) => {\r\n    return axios.post(url, item);\r\n};\r\n\r\nconst remove = (itemId) => {\r\n    return axios.delete(`${url}/${itemId}`);\r\n};\r\n\r\nconst update = (itemId, data) => {\r\n    return axios.put(`${url}/${itemId}`, data);\r\n};\r\n\r\nexport default { getAll, create, update, remove };\r\n","import React, { useState, useEffect } from \"react\";\nimport Search from \"./components/Search\";\nimport Add from \"./components/Add\";\nimport Person from \"./components/Person\";\nimport Notification from \"./components/Notification\";\n// Separate module for server operations.\nimport service from \"./crud_service\";\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [searchWord, setSearchWord] = useState(\"\");\n    const [message, setMessage] = useState(null);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        service.getAll().then((res) => setPersons(res));\n    }, []);\n\n    const handleAddClick = (e) => {\n        e.preventDefault();\n        const newPerson = { name: newName, number: newNumber };\n\n        // Use every() -fuction to check for duplicates.\n        if (persons.every((person) => person.name !== newName)) {\n            service\n                .create(newPerson)\n                .then(() => service.getAll())\n                .then((res) => {\n                    setPersons(res);\n                    setError(false);\n                    setMessage(\"Added \" + newPerson.name);\n                    setTimeout(() => {\n                        setMessage(null);\n                    }, 3000);\n                });\n        } else {\n            const match = persons.find((i) => i.name === newPerson.name);\n            // If the name already exists, asks if user wants to update.\n            if (window.confirm(\"A phone number with this name already exists. Do you want to update the number?\")) {\n                handleUpdate(match, newPerson);\n            }\n        }\n    };\n\n    const handleUpdate = (person, data) => {\n        service\n            .update(person.id, data)\n            .then(() => service.getAll())\n            .then((res) => {\n                setPersons(res);\n                setError(false);\n                setMessage(\"Updated \" + person.name);\n                setTimeout(() => {\n                    setMessage(null);\n                }, 3000);\n            })\n            .catch(() => {\n                setError(true);\n                setMessage(person.name + \" is already deleted.\");\n            });\n    };\n\n    const handleDeleteClick = (id) => {\n        const person = persons.find((n) => n.id === id);\n\n        if (window.confirm(\"Confirm delete \" + person.name)) {\n            service\n                .remove(id)\n                .then(() => service.getAll())\n                .then((res) => {\n                    setPersons(res);\n                    setError(false);\n                    setMessage(\"Deleted \" + person.name);\n                    setTimeout(() => {\n                        setMessage(null);\n                    }, 3000);\n                })\n                .catch(() => {\n                    setError(true);\n                    setMessage(person.name + \" is already deleted.\");\n                });\n        }\n    };\n\n    const handleNumberChange = (e) => {\n        setNewNumber(e.target.value);\n    };\n\n    const handleNameChange = (e) => {\n        setNewName(e.target.value);\n    };\n\n    const handleSearchChange = (e) => {\n        setSearchWord(e.target.value);\n    };\n\n    let notification;\n    if (error) {\n        notification = <Notification type=\"error\" message={message} />;\n    } else {\n        notification = <Notification type=\"success\" message={message} />;\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            {notification}\n            <Search changeHandler={handleSearchChange} />\n            <h3>Add a new person</h3>\n            <Add\n                nameChangeHandler={handleNameChange}\n                numberChangeHandler={handleNumberChange}\n                clickHandler={handleAddClick}\n            />\n            <h2>Numbers</h2>\n            {persons.map((person) => {\n                if (person.name.toLowerCase().includes(searchWord)) {\n                    return (\n                        <Person\n                            key={person.name}\n                            name={person.name}\n                            number={person.number}\n                            clickHandler={() => handleDeleteClick(person.id)}\n                        />\n                    );\n                } else {\n                    return null;\n                }\n            })}\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}